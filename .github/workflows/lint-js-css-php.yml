name: CI/CD

on:
    push:
        branches: [ dev ]
        paths:
            - '**.css'
            - '**.js'
            - '**.php'
            - 'composer.lock'
            - '**.json'
            - '**.yml'
    pull_request:
        branches: [ dev ]
        paths:
            - '**.css'
            - '**.js'
            - '**.php'
            - 'composer.lock'
            - '**.json'
            - '**.yml'

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name for pull requests
    # or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node: [ 18.x ]
                php: [ 8.0 ]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: |
                      **/node_modules
                  key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

            - name: Set up Node.js ${{ matrix.node }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node }}

            - name: Install dependencies Plugin
              run: npm install

            - name: Build Plugin
              run: npm run build

            - name: Set up Composer caching
              uses: actions/cache@v3
              env:
                  cache-name: cache-composer-dependencies
              with:
                  path: /tmp/composer-cache
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none
                  tools: composer, cs2pr

            - name: Log debug information
              run: |
                  php --version
                  composer --version

            - name: Install Composer dependencies
              run: |
                  composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction
                  echo "vendor/bin" >> $GITHUB_PATH

            - name: Log PHPCS debug information
              run: vendor/bin/phpcs -i

            - name: Run PHPCS on all files
              run: vendor/bin/phpcs . -q -n --report=checkstyle | cs2pr

            - name: Cleanup package
              run: |
                  rm -rf node_modules && echo node_modules "deleted"
                  rm -rf vendor && echo vendor "deleted"
                  rm -rf packages && echo packages "deleted"
                  rm -rf .editorconfig && echo .editorconfig "deleted"
                  rm -rf .eslintignore && echo .eslintignore "deleted"
                  rm -rf .eslintrc.js && echo .eslintrc.js "deleted"
                  rm -rf .gitignore && echo .gitignore "deleted"
                  rm -rf .prettierignore && echo .prettierignore "deleted"
                  rm -rf .prettierrc.js && echo .prettierrc.js "deleted"
                  rm -rf .stylelintignore && echo .stylelintignore "deleted"
                  rm -rf .stylelintrc.js && echo .stylelintrc.js "deleted"
                  rm -rf composer.lock && echo composer.lock "deleted"
                  rm -rf packages.json && echo packages.json "deleted"
                  rm -rf package-lock.json && echo package-lock.json "deleted"
                  rm -rf phpcs.xml.dist && echo phpcs.xml.dist "deleted"
                  rm -rf postcss.config.js && echo postcss.config.js "deleted"
                  rm -rf webpack.config.js && echo webpack.config.js "deleted"
                  rm -rf .git && echo .git "deleted"
                  rm -rf .github && echo .github "deleted"
                  rm -rf .husky && echo .husky "deleted"

            - name: Prepare Package deploy package
              run: |
                   mkdir wps-blocks
                   rsync -a --exclude 'wps-blocks' . wps-blocks/
                   zip -r wps-blocks.zip wps-blocks

            - name: Push to server
              working-directory: ./
              run: |
                  echo "::group::Setup Auth Keys"
                  mkdir ~/.ssh
                  echo "${{ secrets.SSH_REMOTE_DEPLOY_KEY }}" >> ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  echo "::endgroup::"

                  echo "::group::Pre-approve rsync destination"
                  ssh-keyscan -H ${{ secrets.SSH_REMOTE_ADDRESS }} > ~/.ssh/known_hosts
                  echo "::endgroup::"

                  echo "::group::Rsync files"
                  sshpass -p ${{ secrets.SSH_REMOTE_PASS }} rsync -avz --delete -e "ssh -p ${{ secrets.SSH_REMOTE_PORT }}" wps-blocks.zip ${{ secrets.SSH_REMOTE_USER }}@${{ secrets.SSH_REMOTE_ADDRESS }}:${{ secrets.SSH_REMOTE_PATH }}/
                  echo "::endgroup::"

            - name: Generate meta file
              run: |
                curl -Is ${{ secrets.SSH_REMOTE_DOMAIN }}/packages/get-info.php?action=cron | head -1

            - name: Post to a Slack success
              if: ${{ success() }}
              id: slack-success
              uses: slackapi/slack-github-action@v1.23.0
              with:
                    # Slack channel id, channel name, or user id to post message.
                    # See also: https://api.slack.com/methods/chat.postMessage#channels
                    # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
                    channel-id: 'C043ESLPGCW'
                    # For posting a simple plain text message
                    payload: |
                        {
                          "blocks": [
                            {
                              "type": "section",
                              "text": {
                                "type": "mrkdwn",
                                "text": "üöÄ\n Repo: ${{github.repository}} \n Branch: ${{github.ref_name}}\n Status: ${{ job.status }} ‚úîÔ∏è \n${{ github.event.pull_request.html_url || github.event.head_commit.url }} "
                              }
                            }
                          ]
                        }
              env:
                 SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

            - name: Post to a Slack failure
              if: ${{ failure() }}
              id: slack-failure
              uses: slackapi/slack-github-action@v1.23.0
              with:
                  # Slack channel id, channel name, or user id to post message.
                  # See also: https://api.slack.com/methods/chat.postMessage#channels
                  # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
                  channel-id: 'C043ESLPGCW'
                  # For posting a simple plain text message
                  payload: |
                      {
                        "blocks": [
                          {
                            "type": "section",
                            "text": {
                              "type": "mrkdwn",
                              "text": "‚ùó\n Repo: ${{github.repository}} \n Branch: ${{github.ref_name}}\n Status: ${{ job.status }} üôà \n${{ github.event.pull_request.html_url || github.event.head_commit.url }} "
                            }
                          }
                        ]
                      }
              env:
                  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
